
class Node {
  constructor(value){
    this.value = value;
    this.left = null;
    this.right = null;
  }
}

class BinarySearchTree{
  constructor(){
    this.root = null;
  }

  Insert(value){
   let newNode = new Node(value);
   let current;
   if(this.root == null){
      this.root = newNode;
      return this;
    }
      current = this.root;
      while(true){
        if(value == current.value)
        return undefined;
        if(current.value>value){
          if(current.left==null){
            current.left = newNode;
            return this;
          }
          else{
            current = current.left;
          }
        }
        if(current.value<value){
          if(current.right==null){
            current.right = newNode;
            return this;
          }
          else{
            current = current.right;
          }
        }
      }
    
  }
}
let tree = new BinarySearchTree();
tree.Insert(20);
tree.Insert(10);
tree.Insert(30);
tree.Insert(11);
tree.Insert(31);
tree.Insert(25);
tree.Insert(10);
tree.Insert(12);
console.log(tree);
